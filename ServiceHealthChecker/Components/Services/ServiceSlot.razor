@using ServiceHealthChecker.DB.Models

    <Frame>
        <StackLayout>
            <StackLayout Orientation="XF.StackOrientation.Horizontal">
                <Label Text=@service.Item1.Name />
                <Label Text=@service.Item2.Status.ToString() />
            </StackLayout>
            <StackLayout Orientation="XF.StackOrientation.Horizontal">
                <Button Text="Detail" OnClick=@(() => ServiceSelected.InvokeAsync(service.Item1)) IsEnabled=@(!isProbing) />
                <Button Text="Probe" OnClick=@probeService IsEnabled=@(!isProbing) />
                <ActivityIndicator IsVisible="isProbing" IsRunning="true" />
            </StackLayout>
        </StackLayout>
    </Frame>

@code
{
    //todo rename
    [Parameter]
    public (Service, ProbingLog) service { get; set; }

    [Parameter]
    public EventCallback<Service> ServiceSelected { get; set; }

    private bool isProbing;

    private async void probeService()
    {
        isProbing = true;

        //todo do some renaming for the love of god
        var result = await Testers.Tester.TestService(service.Item1);
        await App.LogsDb.SaveProbingLogAsync(result);
        isProbing = false;
        StateHasChanged();
    }
}